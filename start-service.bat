@echo off
echo ========================================
echo   üöÄ LEVANTANDO SERVICIO RABBITMQ + RUST
echo ========================================
echo.

echo üì¶ 1. Levantando RabbitMQ...
docker-compose up -d rabbitmq

echo ‚è≥ 2. Esperando que RabbitMQ est√© listo...
timeout /t 20 >nul

echo ‚öôÔ∏è  3. Inicializando RabbitMQ (exchanges y queues) autom√°ticamente...
docker-compose up rabbitmq-setup

echo üî® 4. Compilando aplicaci√≥n Rust...
cargo build

echo üë∑ 5. Levantando Worker...
start "RabbitMQ Worker" cmd /k "cargo run --bin worker"

echo üåê 6. Levantando Servidor API...
start "API Server" cmd /k "cargo run"

echo ‚è≥ 7. Esperando que los servicios arranquen...
timeout /t 5 >nul

echo üß™ 8. Probando la API...
curl -X POST http://localhost:8081/notify -H "Content-Type: application/json" -d "{\"user_id\":\"test\",\"message\":\"¬°Servicio funcionando!\"}"

echo.
echo ========================================
echo ‚úÖ SERVICIO LEVANTADO CORRECTAMENTE
echo ========================================
echo.
echo üìä RabbitMQ Management: http://localhost:15672 (guest/guest)
echo üîó API Server: http://localhost:8081
echo.
echo Endpoints:
echo   POST /notify              - Notificaci√≥n inmediata
echo   POST /notify-delayed      - Notificaci√≥n con delay
echo   POST /schedule-notification - Notificar en fecha espec√≠fica
echo.
echo ‚ö†Ô∏è  Para detener: stop-service.bat
pause
